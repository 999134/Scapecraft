package net.minecraft.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelVerac extends ModelBase
{
//fields
    ModelRenderer body;
    ModelRenderer rightarm;
    ModelRenderer leftarm;
    ModelRenderer rightleg;
    ModelRenderer leftleg;
    ModelRenderer head;
    ModelRenderer DiagonalHelmPoof;
    ModelRenderer BackHelmPoof;
    ModelRenderer TopHelmPoof;
    ModelRenderer RightTopHorn;
    ModelRenderer RightBottomHorn;
    ModelRenderer LeftTopHorn;
    ModelRenderer LeftBottomHorn;
    ModelRenderer BottomArmor1;
    ModelRenderer BottomArmor2;
    ModelRenderer BottomArmor3;
    ModelRenderer BottomArmor4;
    ModelRenderer TopArmor1;
    ModelRenderer TopArmor2;
    ModelRenderer TopArmor3;
    ModelRenderer Handle;
    ModelRenderer BottomRung;
    ModelRenderer MiddleRung;
    ModelRenderer TopRung;
    ModelRenderer ChainStart;
    ModelRenderer Chain1;
    ModelRenderer Chain2;
    ModelRenderer Chain3;
    ModelRenderer Chain4;
    ModelRenderer Chain5;
    ModelRenderer VertTopCase;
    ModelRenderer VertRightCase;
    ModelRenderer VertLeftCase;
    ModelRenderer VertBotCase;
    ModelRenderer HorizFrontCase;
    ModelRenderer HorizRightCase;
    ModelRenderer HorizLeftCase;
    ModelRenderer HorizBackCase;
    ModelRenderer VertBotSpike;
    ModelRenderer HorizFrontSpike;
    ModelRenderer HorizRightSpike;
    ModelRenderer HorizLeftSpike;
    ModelRenderer HorizBackSpike;
    ModelRenderer GreenCube;

public ModelVerac()
{
    textureWidth = 128;
    textureHeight = 128;
    
      body = new ModelRenderer(this, 43, 63);
      body.addBox(-6F, -8F, -4F, 12, 16, 8);
      body.setRotationPoint(0F, 0F, 2F);
      body.setTextureSize(128, 128);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      rightarm = new ModelRenderer(this, 1, 102);
      rightarm.addBox(-6F, -1F, -4F, 6, 16, 8);
      rightarm.setRotationPoint(-6F, -7F, 2F);
      rightarm.setTextureSize(128, 128);
      rightarm.mirror = true;
      setRotation(rightarm, -0.2617994F, 0F, 0F);
      leftarm = new ModelRenderer(this, 88, 55);
      leftarm.addBox(0F, -1F, -4F, 6, 16, 8);
      leftarm.setRotationPoint(6F, -7F, 2F);
      leftarm.setTextureSize(128, 128);
      leftarm.mirror = true;
      setRotation(leftarm, 0F, 0F, 0F);
      rightleg = new ModelRenderer(this, 41, 91);
      rightleg.addBox(-3F, 0F, -4F, 6, 16, 8);
      rightleg.setRotationPoint(-3F, 8F, 2F);
      rightleg.setTextureSize(128, 128);
      rightleg.mirror = true;
      setRotation(rightleg, 0F, 0F, 0F);
      leftleg = new ModelRenderer(this, 72, 91);
      leftleg.addBox(-3F, 0F, -4F, 6, 16, 8);
      leftleg.setRotationPoint(3F, 8F, 2F);
      leftleg.setTextureSize(128, 128);
      leftleg.mirror = true;
      setRotation(leftleg, 0F, 0F, 0F);
      head = new ModelRenderer(this, 39, 37);
      head.addBox(-6F, -12F, -6F, 12, 12, 12);
      head.setRotationPoint(0F, -8F, 2F);
      head.setTextureSize(128, 128);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      DiagonalHelmPoof = new ModelRenderer(this, 70, 7);
      DiagonalHelmPoof.addBox(-1.5F, -8.8F, 11.9F, 3, 9, 5);
      DiagonalHelmPoof.setRotationPoint(0F, -8F, 2F);
      DiagonalHelmPoof.setTextureSize(128, 128);
      DiagonalHelmPoof.mirror = true;
      setRotation(DiagonalHelmPoof, 0.7853982F, 0F, 0F);
      BackHelmPoof = new ModelRenderer(this, 88, 3);
      BackHelmPoof.addBox(-1.5F, -12F, 6F, 3, 12, 6);
      BackHelmPoof.setRotationPoint(0F, -8F, 2F);
      BackHelmPoof.setTextureSize(128, 128);
      BackHelmPoof.mirror = true;
      setRotation(BackHelmPoof, 0F, 0F, 0F);
      TopHelmPoof = new ModelRenderer(this, 38, 3);
      TopHelmPoof.addBox(-1.5F, -18F, -6F, 3, 6, 12);
      TopHelmPoof.setRotationPoint(0F, -8F, 2F);
      TopHelmPoof.setTextureSize(128, 128);
      TopHelmPoof.mirror = true;
      setRotation(TopHelmPoof, 0F, 0F, 0F);
      RightTopHorn = new ModelRenderer(this, 96, 32);
      RightTopHorn.addBox(-6.1F, -12.7F, -1F, 2, 3, 2);
      RightTopHorn.setRotationPoint(0F, -8F, 2F);
      RightTopHorn.setTextureSize(128, 128);
      RightTopHorn.mirror = true;
      setRotation(RightTopHorn, 0F, 0F, -0.3490659F);
      RightBottomHorn = new ModelRenderer(this, 89, 38);
      RightBottomHorn.addBox(-9F, -9F, -1F, 3, 2, 2);
      RightBottomHorn.setRotationPoint(0F, -8F, 2F);
      RightBottomHorn.setTextureSize(128, 128);
      RightBottomHorn.mirror = true;
      setRotation(RightBottomHorn, 0F, 0F, 0F);
      LeftTopHorn = new ModelRenderer(this, 96, 32);
      LeftTopHorn.addBox(4.1F, -12.7F, -1F, 2, 3, 2);
      LeftTopHorn.setRotationPoint(0F, -8F, 2F);
      LeftTopHorn.setTextureSize(128, 128);
      LeftTopHorn.mirror = true;
      setRotation(LeftTopHorn, 0F, 0F, 0.3490659F);
      LeftBottomHorn = new ModelRenderer(this, 89, 38);
      LeftBottomHorn.addBox(6F, -9F, -1F, 3, 2, 2);
      LeftBottomHorn.setRotationPoint(0F, -8F, 2F);
      LeftBottomHorn.setTextureSize(128, 128);
      LeftBottomHorn.mirror = true;
      setRotation(LeftBottomHorn, 0F, 0F, 0F);
      BottomArmor1 = new ModelRenderer(this, 107, 26);
      BottomArmor1.addBox(5F, -2F, -4F, 2, 2, 8);
      BottomArmor1.setRotationPoint(6F, -7F, 2F);
      BottomArmor1.setTextureSize(128, 128);
      BottomArmor1.mirror = true;
      setRotation(BottomArmor1, 0F, 0F, 0F);
      BottomArmor2 = new ModelRenderer(this, 109, 16);
      BottomArmor2.addBox(5.1F, -3.5F, -3F, 2, 2, 6);
      BottomArmor2.setRotationPoint(6F, -7F, 2F);
      BottomArmor2.setTextureSize(128, 128);
      BottomArmor2.mirror = true;
      setRotation(BottomArmor2, 0F, 0F, -0.0698132F);
      BottomArmor3 = new ModelRenderer(this, 112, 9);
      BottomArmor3.addBox(5.1F, -5.4F, -1.5F, 2, 2, 3);
      BottomArmor3.setRotationPoint(6F, -7F, 2F);
      BottomArmor3.setTextureSize(128, 128);
      BottomArmor3.mirror = true;
      setRotation(BottomArmor3, 0F, 0F, -0.0698132F);
      BottomArmor4 = new ModelRenderer(this, 108, 41);
      BottomArmor4.addBox(5.5F, 0F, -4F, 1, 1, 8);
      BottomArmor4.setRotationPoint(6F, -7F, 2F);
      BottomArmor4.setTextureSize(128, 128);
      BottomArmor4.mirror = true;
      setRotation(BottomArmor4, 0F, 0F, 0F);
      TopArmor1 = new ModelRenderer(this, 104, 112);
      TopArmor1.addBox(2F, -3F, -4F, 2, 2, 8);
      TopArmor1.setRotationPoint(6F, -7F, 2F);
      TopArmor1.setTextureSize(128, 128);
      TopArmor1.mirror = true;
      setRotation(TopArmor1, 0F, 0F, 0F);
      TopArmor2 = new ModelRenderer(this, 106, 101);
      TopArmor2.addBox(2.2F, -4.7F, -3F, 2, 2, 6);
      TopArmor2.setRotationPoint(6F, -7F, 2F);
      TopArmor2.setTextureSize(128, 128);
      TopArmor2.mirror = true;
      setRotation(TopArmor2, 0F, 0F, -0.0698132F);
      TopArmor3 = new ModelRenderer(this, 108, 94);
      TopArmor3.addBox(2.3F, -6.7F, -1.5F, 2, 2, 3);
      TopArmor3.setRotationPoint(6F, -6.9F, 2F);
      TopArmor3.setTextureSize(128, 128);
      TopArmor3.mirror = true;
      setRotation(TopArmor3, 0F, 0F, -0.0872665F);
      Handle = new ModelRenderer(this, 1, 1);
      Handle.addBox(-4F, -14F, -14.9F, 2, 24, 2);
      Handle.setRotationPoint(-6F, -7F, 2F);
      Handle.setTextureSize(128, 128);
      Handle.mirror = true;
      setRotation(Handle, 1.308997F, 0F, 0F);
      BottomRung = new ModelRenderer(this, 10, 1);
      BottomRung.addBox(-4.5F, 7.5F, -15.5F, 3, 2, 3);
      BottomRung.setRotationPoint(-6F, -7F, 2F);
      BottomRung.setTextureSize(128, 128);
      BottomRung.mirror = true;
      setRotation(BottomRung, 1.308997F, 0F, 0F);
      MiddleRung = new ModelRenderer(this, 10, 7);
      MiddleRung.addBox(-5F, 6F, -16F, 4, 2, 4);
      MiddleRung.setRotationPoint(-6F, -7F, 2F);
      MiddleRung.setTextureSize(128, 128);
      MiddleRung.mirror = true;
      setRotation(MiddleRung, 1.308997F, 0F, 0F);
      TopRung = new ModelRenderer(this, 10, 15);
      TopRung.addBox(-5F, -15F, -16F, 4, 2, 4);
      TopRung.setRotationPoint(-6F, -7F, 2F);
      TopRung.setTextureSize(128, 128);
      TopRung.mirror = true;
      setRotation(TopRung, 1.308997F, 0F, 0F);
      ChainStart = new ModelRenderer(this, 10, 23);
      ChainStart.addBox(-4F, -16F, -16F, 2, 2, 2);
      ChainStart.setRotationPoint(-6F, -8F, 2F);
      ChainStart.setTextureSize(128, 128);
      ChainStart.mirror = true;
      setRotation(ChainStart, 1.308997F, 0F, 0F);
      Chain1 = new ModelRenderer(this, 20, 23);
      Chain1.addBox(-3.5F, 10F, -20.5F, 1, 2, 2);
      Chain1.setRotationPoint(-6F, -7F, 2F);
      Chain1.setTextureSize(128, 128);
      Chain1.mirror = true;
      setRotation(Chain1, 0F, 0F, 0F);
      Chain2 = new ModelRenderer(this, 27, 24);
      Chain2.addBox(-4F, 11.5F, -20F, 2, 2, 1);
      Chain2.setRotationPoint(-6F, -7F, 2F);
      Chain2.setTextureSize(128, 128);
      Chain2.mirror = true;
      setRotation(Chain2, 0F, 0F, 0F);
      Chain3 = new ModelRenderer(this, 20, 23);
      Chain3.addBox(-3.5F, 13F, -20.5F, 1, 2, 2);
      Chain3.setRotationPoint(-6F, -7F, 2F);
      Chain3.setTextureSize(128, 128);
      Chain3.mirror = true;
      setRotation(Chain3, 0F, 0F, 0F);
      Chain4 = new ModelRenderer(this, 27, 24);
      Chain4.addBox(-4F, 14.5F, -20F, 2, 2, 1);
      Chain4.setRotationPoint(-6F, -7F, 2F);
      Chain4.setTextureSize(128, 128);
      Chain4.mirror = true;
      setRotation(Chain4, 0F, 0F, 0F);
      Chain5 = new ModelRenderer(this, 20, 23);
      Chain5.addBox(-3.5F, 16F, -20.5F, 1, 2, 2);
      Chain5.setRotationPoint(-6F, -7F, 2F);
      Chain5.setTextureSize(128, 128);
      Chain5.mirror = true;
      setRotation(Chain5, 0F, 0F, 0F);
      VertTopCase = new ModelRenderer(this, 1, 43);
      VertTopCase.addBox(-7F, 17.5F, -20F, 8, 1, 1);
      VertTopCase.setRotationPoint(-6F, -7F, 2F);
      VertTopCase.setTextureSize(128, 128);
      VertTopCase.mirror = true;
      setRotation(VertTopCase, 0F, 0F, 0F);
      VertRightCase = new ModelRenderer(this, 23, 30);
      VertRightCase.addBox(-7F, 17.5F, -20F, 1, 8, 1);
      VertRightCase.setRotationPoint(-6F, -7F, 2F);
      VertRightCase.setTextureSize(128, 128);
      VertRightCase.mirror = true;
      setRotation(VertRightCase, 0F, 0F, 0F);
      VertLeftCase = new ModelRenderer(this, 23, 30);
      VertLeftCase.addBox(0F, 17.5F, -20F, 1, 8, 1);
      VertLeftCase.setRotationPoint(-6F, -7F, 2F);
      VertLeftCase.setTextureSize(128, 128);
      VertLeftCase.mirror = true;
      setRotation(VertLeftCase, 0F, 0F, 0F);
      VertBotCase = new ModelRenderer(this, 1, 43);
      VertBotCase.addBox(-7F, 22.5F, -20F, 8, 1, 1);
      VertBotCase.setRotationPoint(-6F, -5F, 2F);
      VertBotCase.setTextureSize(128, 128);
      VertBotCase.mirror = true;
      setRotation(VertBotCase, 0F, 0F, 0F);
      HorizFrontCase = new ModelRenderer(this, 1, 43);
      HorizFrontCase.addBox(-7F, 21F, -23.5F, 8, 1, 1);
      HorizFrontCase.setRotationPoint(-6F, -7F, 2F);
      HorizFrontCase.setTextureSize(128, 128);
      HorizFrontCase.mirror = true;
      setRotation(HorizFrontCase, 0F, 0F, 0F);
      HorizRightCase = new ModelRenderer(this, 1, 47);
      HorizRightCase.addBox(-7F, 21F, -23.5F, 1, 1, 8);
      HorizRightCase.setRotationPoint(-6F, -7F, 2F);
      HorizRightCase.setTextureSize(128, 128);
      HorizRightCase.mirror = true;
      setRotation(HorizRightCase, 0F, 0F, 0F);
      HorizLeftCase = new ModelRenderer(this, 1, 47);
      HorizLeftCase.addBox(0F, 21F, -23.5F, 1, 1, 8);
      HorizLeftCase.setRotationPoint(-6F, -7F, 2F);
      HorizLeftCase.setTextureSize(128, 128);
      HorizLeftCase.mirror = true;
      setRotation(HorizLeftCase, 0F, 0F, 0F);
      HorizBackCase = new ModelRenderer(this, 1, 43);
      HorizBackCase.addBox(-7F, 21F, -16.5F, 8, 1, 1);
      HorizBackCase.setRotationPoint(-6F, -7F, 2F);
      HorizBackCase.setTextureSize(128, 128);
      HorizBackCase.mirror = true;
      setRotation(HorizBackCase, 0F, 0F, 0F);
      VertBotSpike = new ModelRenderer(this, 28, 1);
      VertBotSpike.addBox(-3.5F, 25.5F, -20F, 1, 2, 1);
      VertBotSpike.setRotationPoint(-6F, -7F, 2F);
      VertBotSpike.setTextureSize(128, 128);
      VertBotSpike.mirror = true;
      setRotation(VertBotSpike, 0F, 0F, 0F);
      HorizFrontSpike = new ModelRenderer(this, 27, 5);
      HorizFrontSpike.addBox(-3.5F, 21F, -26.5F, 1, 1, 3);
      HorizFrontSpike.setRotationPoint(-6F, -7F, 2F);
      HorizFrontSpike.setTextureSize(128, 128);
      HorizFrontSpike.mirror = true;
      setRotation(HorizFrontSpike, 0F, 0F, 0F);
      HorizRightSpike = new ModelRenderer(this, 27, 11);
      HorizRightSpike.addBox(-10F, 21F, -20F, 3, 1, 1);
      HorizRightSpike.setRotationPoint(-6F, -7F, 2F);
      HorizRightSpike.setTextureSize(128, 128);
      HorizRightSpike.mirror = true;
      setRotation(HorizRightSpike, 0F, 0F, 0F);
      HorizLeftSpike = new ModelRenderer(this, 27, 11);
      HorizLeftSpike.addBox(1F, 21F, -20F, 3, 1, 1);
      HorizLeftSpike.setRotationPoint(-6F, -7F, 2F);
      HorizLeftSpike.setTextureSize(128, 128);
      HorizLeftSpike.mirror = true;
      setRotation(HorizLeftSpike, 0F, 0F, 0F);
      HorizBackSpike = new ModelRenderer(this, 27, 5);
      HorizBackSpike.addBox(-3.5F, 21F, -15.5F, 1, 1, 3);
      HorizBackSpike.setRotationPoint(-6F, -7F, 2F);
      HorizBackSpike.setTextureSize(128, 128);
      HorizBackSpike.mirror = true;
      setRotation(HorizBackSpike, 0F, 0F, 0F);
      GreenCube = new ModelRenderer(this, 1, 30);
      GreenCube.addBox(-5.5F, 19F, -22F, 5, 5, 5);
      GreenCube.setRotationPoint(-6F, -7F, 2F);
      GreenCube.setTextureSize(128, 128);
      GreenCube.mirror = true;
      setRotation(GreenCube, 0F, 0F, 0F);
}

public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
{
 super.render(entity, f, f1, f2, f3, f4, f5);
 setRotationAngles(f, f1, f2, f3, f4, f5);
 body.renderWithRotation(f5);
 rightarm.renderWithRotation(f5);
 leftarm.renderWithRotation(f5);
 rightleg.renderWithRotation(f5);
 leftleg.renderWithRotation(f5);
 head.renderWithRotation(f5);
 DiagonalHelmPoof.renderWithRotation(f5);
 BackHelmPoof.renderWithRotation(f5);
 TopHelmPoof.renderWithRotation(f5);
 RightTopHorn.renderWithRotation(f5);
 RightBottomHorn.renderWithRotation(f5);
 LeftTopHorn.renderWithRotation(f5);
 LeftBottomHorn.renderWithRotation(f5);
 BottomArmor1.renderWithRotation(f5);
 BottomArmor2.renderWithRotation(f5);
 BottomArmor3.renderWithRotation(f5);
 BottomArmor4.renderWithRotation(f5);
 TopArmor1.renderWithRotation(f5);
 TopArmor2.renderWithRotation(f5);
 TopArmor3.renderWithRotation(f5);
 Handle.renderWithRotation(f5);
 BottomRung.renderWithRotation(f5);
 MiddleRung.renderWithRotation(f5);
 TopRung.renderWithRotation(f5);
 ChainStart.renderWithRotation(f5);
 Chain1.renderWithRotation(f5);
 Chain2.renderWithRotation(f5);
 Chain3.renderWithRotation(f5);
 Chain4.renderWithRotation(f5);
 Chain5.renderWithRotation(f5);
 VertTopCase.renderWithRotation(f5);
 VertRightCase.renderWithRotation(f5);
 VertLeftCase.renderWithRotation(f5);
 VertBotCase.renderWithRotation(f5);
 HorizFrontCase.renderWithRotation(f5);
 HorizRightCase.renderWithRotation(f5);
 HorizLeftCase.renderWithRotation(f5);
 HorizBackCase.renderWithRotation(f5);
 VertBotSpike.renderWithRotation(f5);
 HorizFrontSpike.renderWithRotation(f5);
 HorizRightSpike.renderWithRotation(f5);
 HorizLeftSpike.renderWithRotation(f5);
 HorizBackSpike.renderWithRotation(f5);
 GreenCube.renderWithRotation(f5);
}

private void setRotation(ModelRenderer model, float x, float y, float z)
{
 model.rotateAngleX = x;
 model.rotateAngleY = y;
 model.rotateAngleZ = z;
}

public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
{
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
	rightleg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.0F * f1;
	leftleg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1;
	leftarm.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
	rightarm.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1 + -0.261799388F;
    BottomArmor4.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
    BottomArmor1.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
    BottomArmor2.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
    BottomArmor3.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
    TopArmor1.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
    TopArmor2.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
    TopArmor3.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
    Handle.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1 + 1.308996939F;
    BottomRung.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1 + 1.308996939F;
    MiddleRung.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1 + 1.308996939F;
    TopRung.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1 + 1.308996939F;
    ChainStart.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1 + 1.308996939F;
    Chain1.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    Chain2.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    Chain3.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    Chain4.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    Chain5.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    VertTopCase.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    VertRightCase.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    VertLeftCase.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    VertBotCase.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    HorizFrontCase.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    HorizRightCase.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    HorizLeftCase.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    HorizBackCase.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    VertBotSpike.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    HorizFrontSpike.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    HorizRightSpike.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    HorizLeftSpike.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    HorizBackSpike.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
    GreenCube.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
}
}
