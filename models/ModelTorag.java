package net.minecraft.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelTorag extends ModelBase
{
//fields
ModelRenderer RightHelmHorn;
ModelRenderer head;
ModelRenderer LeftHelmHorn;
ModelRenderer body;
ModelRenderer rightarm;
ModelRenderer leftarm;
ModelRenderer rightleg;
ModelRenderer leftleg;
ModelRenderer LeftHandle;
ModelRenderer LeftTopRung;
ModelRenderer LeftBack1;
ModelRenderer LeftBack2;
ModelRenderer LeftBack3;
ModelRenderer LeftBack4;
ModelRenderer LeftFront1;
ModelRenderer LeftFront2;
ModelRenderer LeftFront3;
ModelRenderer LeftFront4;
ModelRenderer LeftTopSpike;
ModelRenderer LeftMain;
ModelRenderer LeftBottomRung;
ModelRenderer LeftBottomSpike;
ModelRenderer LeftHammerSpike1;
ModelRenderer LeftHammerSpike2;
ModelRenderer LeftHammerSpike3;
ModelRenderer LeftHammerSpike4;
ModelRenderer RightHandle;
ModelRenderer RightTopRung;
ModelRenderer RightBack1;
ModelRenderer RightBack2;
ModelRenderer RightBack3;
ModelRenderer RightBack4;
ModelRenderer RightFront1;
ModelRenderer RightFront2;
ModelRenderer RightFront3;
ModelRenderer RightFront4;
ModelRenderer RightTopSpike;
ModelRenderer RightMain;
ModelRenderer RightBottomRung;
ModelRenderer RightBottomSpike;
ModelRenderer RightHammerSpike1;
ModelRenderer RightHammerSpike2;
ModelRenderer RightHammerSpike3;
ModelRenderer RightHammerSpike4;

public ModelTorag()
{
textureWidth = 128;
textureHeight = 128;

RightHelmHorn = new ModelRenderer(this, 1, 28);
RightHelmHorn.addBox(-0.9F, -1.3F, -14.1F, 2, 2, 7);
RightHelmHorn.setRotationPoint(0F, -8F, 2F);
RightHelmHorn.setTextureSize(128, 128);
RightHelmHorn.mirror = true;
setRotation(RightHelmHorn, -0.4014257F, 0.6981317F, 0F);
head = new ModelRenderer(this, 1, 2);
head.addBox(-6F, -12F, -6F, 12, 12, 12);
head.setRotationPoint(0F, -8F, 2F);
head.setTextureSize(128, 128);
head.mirror = true;
setRotation(head, 0F, 0F, 0F);
LeftHelmHorn = new ModelRenderer(this, 21, 28);
LeftHelmHorn.addBox(-1F, -1.1F, -14.1F, 2, 2, 7);
LeftHelmHorn.setRotationPoint(0F, -8F, 2F);
LeftHelmHorn.setTextureSize(128, 128);
LeftHelmHorn.mirror = true;
setRotation(LeftHelmHorn, -0.4014257F, -0.6981317F, 0F);
body = new ModelRenderer(this, 1, 65);
body.addBox(-6F, -8F, -4F, 12, 16, 8);
body.setRotationPoint(0F, 0F, 2F);
body.setTextureSize(128, 128);
body.mirror = true;
setRotation(body, 0F, 0F, 0F);
rightarm = new ModelRenderer(this, 1, 39);
rightarm.addBox(-6F, -2F, -4F, 6, 16, 8);
rightarm.setRotationPoint(-6F, -6F, 2F);
rightarm.setTextureSize(128, 128);
rightarm.mirror = true;
setRotation(rightarm, 0F, 0F, 0F);
leftarm = new ModelRenderer(this, 32, 39);
leftarm.addBox(0F, -2F, -4F, 6, 16, 8);
leftarm.setRotationPoint(6F, -6F, 2F);
leftarm.setTextureSize(128, 128);
leftarm.mirror = true;
setRotation(leftarm, 0F, 0F, 0F);
rightleg = new ModelRenderer(this, 1, 91);
rightleg.addBox(-3F, 0F, -4F, 6, 16, 8);
rightleg.setRotationPoint(-3F, 8F, 2F);
rightleg.setTextureSize(128, 128);
rightleg.mirror = true;
setRotation(rightleg, 0F, 0F, 0F);
leftleg = new ModelRenderer(this, 31, 91);
leftleg.addBox(-3F, 0F, -4F, 6, 16, 8);
leftleg.setRotationPoint(3F, 8F, 2F);
leftleg.setTextureSize(128, 128);
leftleg.mirror = true;
setRotation(leftleg, 0F, 0F, 0F);
LeftHandle = new ModelRenderer(this, 66, 1);
LeftHandle.addBox(2F, 11.9F, -16F, 2, 2, 24);
LeftHandle.setRotationPoint(6F, -6F, 2F);
LeftHandle.setTextureSize(128, 128);
LeftHandle.mirror = true;
setRotation(LeftHandle, 0F, 0F, 0F);
LeftTopRung = new ModelRenderer(this, 66, 41);
LeftTopRung.addBox(1.5F, 11.5F, -9.7F, 3, 3, 5);
LeftTopRung.setRotationPoint(6F, -6F, 2F);
LeftTopRung.setTextureSize(128, 128);
LeftTopRung.mirror = true;
setRotation(LeftTopRung, 0F, 0F, 0F);
LeftBack1 = new ModelRenderer(this, 106, 41);
LeftBack1.addBox(1.5F, 3.1F, -14.9F, 3, 2, 1);
LeftBack1.setRotationPoint(6F, -6F, 2F);
LeftBack1.setTextureSize(128, 128);
LeftBack1.mirror = true;
setRotation(LeftBack1, 0.4461433F, 0F, 0F);
LeftBack2 = new ModelRenderer(this, 106, 46);
LeftBack2.addBox(1.5F, 14F, -8.7F, 3, 2, 1);
LeftBack2.setRotationPoint(6F, -6F, 2F);
LeftBack2.setTextureSize(128, 128);
LeftBack2.mirror = true;
setRotation(LeftBack2, -0.4461411F, 0F, 0F);
LeftBack3 = new ModelRenderer(this, 106, 51);
LeftBack3.addBox(1.5F, 8.5F, -14F, 3, 3, 3);
LeftBack3.setRotationPoint(6F, -6F, 2F);
LeftBack3.setTextureSize(128, 128);
LeftBack3.mirror = true;
setRotation(LeftBack3, 0F, 0F, 0F);
LeftBack4 = new ModelRenderer(this, 88, 41);
LeftBack4.addBox(1F, 6.5F, -14.5F, 4, 3, 4);
LeftBack4.setRotationPoint(6F, -6F, 2F);
LeftBack4.setTextureSize(128, 128);
LeftBack4.mirror = true;
setRotation(LeftBack4, 0F, 0F, 0F);
LeftFront1 = new ModelRenderer(this, 66, 51);
LeftFront1.addBox(1F, 8.8F, -17.2F, 4, 3, 1);
LeftFront1.setRotationPoint(6F, -6F, 2F);
LeftFront1.setTextureSize(128, 128);
LeftFront1.mirror = true;
setRotation(LeftFront1, 0.4461433F, 0F, 0F);
LeftFront2 = new ModelRenderer(this, 66, 57);
LeftFront2.addBox(1F, 19F, -6.4F, 4, 3, 1);
LeftFront2.setRotationPoint(6F, -6F, 2F);
LeftFront2.setTextureSize(128, 128);
LeftFront2.mirror = true;
setRotation(LeftFront2, -0.4461411F, 0F, 0F);
LeftFront3 = new ModelRenderer(this, 66, 63);
LeftFront3.addBox(1F, 14.5F, -14.5F, 4, 3, 4);
LeftFront3.setRotationPoint(6F, -6F, 2F);
LeftFront3.setTextureSize(128, 128);
LeftFront3.mirror = true;
setRotation(LeftFront3, 0F, 0F, 0F);
LeftFront4 = new ModelRenderer(this, 88, 29);
LeftFront4.addBox(0F, 17F, -15.5F, 6, 4, 6);
LeftFront4.setRotationPoint(6F, -6F, 2F);
LeftFront4.setTextureSize(128, 128);
LeftFront4.mirror = true;
setRotation(LeftFront4, 0F, 0F, 0F);
LeftTopSpike = new ModelRenderer(this, 120, 1);
LeftTopSpike.addBox(2.5F, 12.5F, -18F, 1, 1, 2);
LeftTopSpike.setRotationPoint(6F, -6F, 2F);
LeftTopSpike.setTextureSize(128, 128);
LeftTopSpike.mirror = true;
setRotation(LeftTopSpike, 0F, 0F, 0F);
LeftMain = new ModelRenderer(this, 66, 29);
LeftMain.addBox(0.5F, 10.5F, -15F, 5, 5, 5);
LeftMain.setRotationPoint(6F, -6F, 2F);
LeftMain.setTextureSize(128, 128);
LeftMain.mirror = true;
setRotation(LeftMain, 0F, 0F, 0F);
LeftBottomRung = new ModelRenderer(this, 66, 72);
LeftBottomRung.addBox(1.5F, 11.5F, 4.5F, 3, 3, 3);
LeftBottomRung.setRotationPoint(6F, -6F, 2F);
LeftBottomRung.setTextureSize(128, 128);
LeftBottomRung.mirror = true;
setRotation(LeftBottomRung, 0F, 0F, 0F);
LeftBottomSpike = new ModelRenderer(this, 120, 6);
LeftBottomSpike.addBox(2.5F, 12.5F, 8F, 1, 1, 2);
LeftBottomSpike.setRotationPoint(6F, -6F, 2F);
LeftBottomSpike.setTextureSize(128, 128);
LeftBottomSpike.mirror = true;
setRotation(LeftBottomSpike, 0F, 0F, 0F);
LeftHammerSpike1 = new ModelRenderer(this, 120, 10);
LeftHammerSpike1.addBox(1F, 5.5F, -13F, 1, 1, 1);
LeftHammerSpike1.setRotationPoint(6F, -6F, 2F);
LeftHammerSpike1.setTextureSize(128, 128);
LeftHammerSpike1.mirror = true;
setRotation(LeftHammerSpike1, 0F, 0F, 0F);
LeftHammerSpike2 = new ModelRenderer(this, 120, 10);
LeftHammerSpike2.addBox(2.5F, 5.5F, -11.5F, 1, 1, 1);
LeftHammerSpike2.setRotationPoint(6F, -6F, 2F);
LeftHammerSpike2.setTextureSize(128, 128);
LeftHammerSpike2.mirror = true;
setRotation(LeftHammerSpike2, 0F, 0F, 0F);
LeftHammerSpike3 = new ModelRenderer(this, 120, 10);
LeftHammerSpike3.addBox(4F, 5.5F, -13F, 1, 1, 1);
LeftHammerSpike3.setRotationPoint(6F, -6F, 2F);
LeftHammerSpike3.setTextureSize(128, 128);
LeftHammerSpike3.mirror = true;
setRotation(LeftHammerSpike3, 0F, 0F, 0F);
LeftHammerSpike4 = new ModelRenderer(this, 120, 10);
LeftHammerSpike4.addBox(2.5F, 5.5F, -14.5F, 1, 1, 1);
LeftHammerSpike4.setRotationPoint(6F, -6F, 2F);
LeftHammerSpike4.setTextureSize(128, 128);
LeftHammerSpike4.mirror = true;
setRotation(LeftHammerSpike4, 0F, 0F, 0F);
RightHandle = new ModelRenderer(this, 66, 1);
RightHandle.addBox(-4F, 11.9F, -16F, 2, 2, 24);
RightHandle.setRotationPoint(-6F, -6F, 2F);
RightHandle.setTextureSize(128, 128);
RightHandle.mirror = true;
setRotation(RightHandle, 0F, 0F, 0F);
RightTopRung = new ModelRenderer(this, 66, 41);
RightTopRung.addBox(-4.5F, 11.5F, -9.7F, 3, 3, 5);
RightTopRung.setRotationPoint(-6F, -6F, 2F);
RightTopRung.setTextureSize(128, 128);
RightTopRung.mirror = true;
setRotation(RightTopRung, 0F, 0F, 0F);
RightBack1 = new ModelRenderer(this, 106, 41);
RightBack1.addBox(-4.5F, 3.5F, -15F, 3, 2, 1);
RightBack1.setRotationPoint(-6F, -6F, 2F);
RightBack1.setTextureSize(128, 128);
RightBack1.mirror = true;
setRotation(RightBack1, 0.4461433F, 0F, 0F);
RightBack2 = new ModelRenderer(this, 106, 46);
RightBack2.addBox(-4.5F, 14F, -8.7F, 3, 2, 1);
RightBack2.setRotationPoint(-6F, -6F, 2F);
RightBack2.setTextureSize(128, 128);
RightBack2.mirror = true;
setRotation(RightBack2, -0.4461411F, 0F, 0F);
RightBack3 = new ModelRenderer(this, 106, 51);
RightBack3.addBox(-4.5F, 8.5F, -14F, 3, 3, 3);
RightBack3.setRotationPoint(-6F, -6F, 2F);
RightBack3.setTextureSize(128, 128);
RightBack3.mirror = true;
setRotation(RightBack3, 0F, 0F, 0F);
RightBack4 = new ModelRenderer(this, 88, 41);
RightBack4.addBox(-5F, 6.5F, -14.5F, 4, 3, 4);
RightBack4.setRotationPoint(-6F, -6F, 2F);
RightBack4.setTextureSize(128, 128);
RightBack4.mirror = true;
setRotation(RightBack4, 0F, 0F, 0F);
RightFront1 = new ModelRenderer(this, 66, 51);
RightFront1.addBox(-5F, 8.5F, -17.2F, 4, 3, 1);
RightFront1.setRotationPoint(-6F, -6F, 2F);
RightFront1.setTextureSize(128, 128);
RightFront1.mirror = true;
setRotation(RightFront1, 0.4461433F, 0F, 0F);
RightFront2 = new ModelRenderer(this, 66, 57);
RightFront2.addBox(-5F, 19F, -6.4F, 4, 3, 1);
RightFront2.setRotationPoint(-6F, -6F, 2F);
RightFront2.setTextureSize(128, 128);
RightFront2.mirror = true;
setRotation(RightFront2, -0.4461411F, 0F, 0F);
RightFront3 = new ModelRenderer(this, 66, 63);
RightFront3.addBox(-5F, 15.5F, -14.5F, 4, 3, 4);
RightFront3.setRotationPoint(-6F, -6F, 2F);
RightFront3.setTextureSize(128, 128);
RightFront3.mirror = true;
setRotation(RightFront3, 0F, 0F, 0F);
RightFront4 = new ModelRenderer(this, 88, 29);
RightFront4.addBox(-6F, 17F, -15.5F, 6, 4, 6);
RightFront4.setRotationPoint(-6F, -6F, 2F);
RightFront4.setTextureSize(128, 128);
RightFront4.mirror = true;
setRotation(RightFront4, 0F, 0F, 0F);
RightTopSpike = new ModelRenderer(this, 120, 1);
RightTopSpike.addBox(-3.5F, 12.5F, -18F, 1, 1, 2);
RightTopSpike.setRotationPoint(-6F, -6F, 2F);
RightTopSpike.setTextureSize(128, 128);
RightTopSpike.mirror = true;
setRotation(RightTopSpike, 0F, 0F, 0F);
RightMain = new ModelRenderer(this, 66, 29);
RightMain.addBox(-5.5F, 10.5F, -15F, 5, 5, 5);
RightMain.setRotationPoint(-6F, -6F, 2F);
RightMain.setTextureSize(128, 128);
RightMain.mirror = true;
setRotation(RightMain, 0F, 0F, 0F);
RightBottomRung = new ModelRenderer(this, 66, 72);
RightBottomRung.addBox(-4.5F, 11.5F, 4.5F, 3, 3, 3);
RightBottomRung.setRotationPoint(-6F, -6F, 2F);
RightBottomRung.setTextureSize(128, 128);
RightBottomRung.mirror = true;
setRotation(RightBottomRung, 0F, 0F, 0F);
RightBottomSpike = new ModelRenderer(this, 120, 6);
RightBottomSpike.addBox(-3.5F, 12.5F, 8F, 1, 1, 2);
RightBottomSpike.setRotationPoint(-6F, -6F, 2F);
RightBottomSpike.setTextureSize(128, 128);
RightBottomSpike.mirror = true;
setRotation(RightBottomSpike, 0F, 0F, 0F);
RightHammerSpike1 = new ModelRenderer(this, 120, 10);
RightHammerSpike1.addBox(-5F, 5.5F, -13F, 1, 1, 1);
RightHammerSpike1.setRotationPoint(-6F, -6F, 2F);
RightHammerSpike1.setTextureSize(128, 128);
RightHammerSpike1.mirror = true;
setRotation(RightHammerSpike1, 0F, 0F, 0F);
RightHammerSpike2 = new ModelRenderer(this, 120, 10);
RightHammerSpike2.addBox(-3.5F, 5.5F, -11.5F, 1, 1, 1);
RightHammerSpike2.setRotationPoint(-6F, -6F, 2F);
RightHammerSpike2.setTextureSize(128, 128);
RightHammerSpike2.mirror = true;
setRotation(RightHammerSpike2, 0F, 0F, 0F);
RightHammerSpike3 = new ModelRenderer(this, 120, 10);
RightHammerSpike3.addBox(-2F, 5.5F, -13F, 1, 1, 1);
RightHammerSpike3.setRotationPoint(-6F, -6F, 2F);
RightHammerSpike3.setTextureSize(128, 128);
RightHammerSpike3.mirror = true;
setRotation(RightHammerSpike3, 0F, 0F, 0F);
RightHammerSpike4 = new ModelRenderer(this, 120, 10);
RightHammerSpike4.addBox(-3.5F, 5.5F, -14.5F, 1, 1, 1);
RightHammerSpike4.setRotationPoint(-6F, -6F, 2F);
RightHammerSpike4.setTextureSize(128, 128);
RightHammerSpike4.mirror = true;
setRotation(RightHammerSpike4, 0F, 0F, 0F);
}

public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
{
super.render(entity, f, f1, f2, f3, f4, f5);
setRotationAngles(f, f1, f2, f3, f4, f5);
RightHelmHorn.render(f5);
head.render(f5);
LeftHelmHorn.render(f5);
body.render(f5);
rightarm.render(f5);
leftarm.render(f5);
rightleg.render(f5);
leftleg.render(f5);
LeftHandle.render(f5);
LeftTopRung.render(f5);
LeftBack1.render(f5);
LeftBack2.render(f5);
LeftBack3.render(f5);
LeftBack4.render(f5);
LeftFront1.render(f5);
LeftFront2.render(f5);
LeftFront3.render(f5);
LeftFront4.render(f5);
LeftTopSpike.render(f5);
LeftMain.render(f5);
LeftBottomRung.render(f5);
LeftBottomSpike.render(f5);
LeftHammerSpike1.render(f5);
LeftHammerSpike2.render(f5);
LeftHammerSpike3.render(f5);
LeftHammerSpike4.render(f5);
RightHandle.render(f5);
RightTopRung.render(f5);
RightBack1.render(f5);
RightBack2.render(f5);
RightBack3.render(f5);
RightBack4.render(f5);
RightFront1.render(f5);
RightFront2.render(f5);
RightFront3.render(f5);
RightFront4.render(f5);
RightTopSpike.render(f5);
RightMain.render(f5);
RightBottomRung.render(f5);
RightBottomSpike.render(f5);
RightHammerSpike1.render(f5);
RightHammerSpike2.render(f5);
RightHammerSpike3.render(f5);
RightHammerSpike4.render(f5);
}

private void setRotation(ModelRenderer model, float x, float y, float z)
{
model.rotateAngleX = x;
model.rotateAngleY = y;
model.rotateAngleZ = z;
}

public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
{
super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
rightarm.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightHandle.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightTopRung.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightBack1.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1 + 0.446141063F;
RightBack2.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1 + -0.446141063F;
RightBack3.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightBack4.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightFront1.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1 + 0.446141063F;
RightFront2.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1 + -0.446141063F;
RightFront3.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightFront4.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightTopSpike.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightMain.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightBottomRung.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightBottomSpike.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightHammerSpike1.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightHammerSpike2.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightHammerSpike3.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;
RightHammerSpike4.rotateAngleX = MathHelper.cos(f * .5F + (float)Math.PI) * 0.7F * f1;

LeftHandle.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftTopRung.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftBack1.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1 + 0.446141063F;
LeftBack2.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1 + -0.446141063F;
LeftBack3.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftBack4.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftFront1.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1 + 0.446141063F;
LeftFront2.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1 + -0.446141063F;
LeftFront3.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftFront4.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftTopSpike.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftMain.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftBottomRung.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftBottomSpike.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftHammerSpike1.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftHammerSpike2.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftHammerSpike3.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;
LeftHammerSpike4.rotateAngleX = MathHelper.cos(f * .5F) * 0.7F * f1;

rightleg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.0F * f1;
leftleg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1;
}

}